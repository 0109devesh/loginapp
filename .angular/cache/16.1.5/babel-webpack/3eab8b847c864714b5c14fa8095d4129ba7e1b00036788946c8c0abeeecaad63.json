{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nclass AuthInterceptor {\n  constructor(loginService) {\n    this.loginService = loginService;\n  }\n  intercept(req, next) {\n    let newReq = req;\n    let token = this.loginService.getToken();\n    console.log('INTERCEPTOR ', token);\n    console.log(1);\n    if (token != null) {\n      console.log(2);\n      newReq = newReq.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(3);\n    }\n    console.log(1);\n    return next.handle(newReq);\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)(i0.ɵɵinject(i1.LoginService));\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});\nexport { AuthInterceptor };","map":{"version":3,"names":["AuthInterceptor","constructor","loginService","intercept","req","next","newReq","token","getToken","console","log","clone","setHeaders","Authorization","handle","i0","ɵɵinject","i1","LoginService","factory","ɵfac"],"sources":["E:\\Angular Project File\\loginapp\\src\\app\\auth.interceptor.ts"],"sourcesContent":["import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private loginService: LoginService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let newReq = req;\r\n    let token = this.loginService.getToken();\r\n\r\n    console.log('INTERCEPTOR ', token);\r\n\r\nconsole.log(1);\r\n\r\n\r\n    if (token != null) {\r\n\r\n        console.log(2);\r\n      newReq = newReq.clone({\r\n        setHeaders: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      console.log(3);\r\n\r\n    }\r\n\r\n    console.log(1);\r\n\r\n    return next.handle(newReq);\r\n  }\r\n}\r\n"],"mappings":";;AAUA,MACaA,eAAe;EAC1BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAAiB;EAEjDC,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAEjB,IAAIC,MAAM,GAAGF,GAAG;IAChB,IAAIG,KAAK,GAAG,IAAI,CAACL,YAAY,CAACM,QAAQ,EAAE;IAExCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,KAAK,CAAC;IAEtCE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAGV,IAAIH,KAAK,IAAI,IAAI,EAAE;MAEfE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;MAChBJ,MAAM,GAAGA,MAAM,CAACK,KAAK,CAAC;QACpBC,UAAU,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAE;OAC/C,CAAC;MAEFE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;;IAIhBD,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,OAAOL,IAAI,CAACS,MAAM,CAACR,MAAM,CAAC;EAC5B;;AA7BWN,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB;AAAA;SAAfpB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}