{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(loginService) {\n    this.loginService = loginService;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n  }\n  ngOnInit() {}\n  onSubmit() {\n    console.log('form is submitted');\n    console.log(this.credentials);\n    if (this.credentials.email != '' && this.credentials.password != '' && this.credentials.email != null && this.credentials.password != null) {\n      console.log('We have to submit the form to server');\n      // token generate\n      this.loginService.generateToken(this.credentials).subscribe(response => {\n        // success\n        console.log(response);\n      }, error => {\n        // error\n        console.log(error);\n      });\n    } else {\n      console.log('Fields are empty !!');\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","loginService","credentials","email","password","ngOnInit","onSubmit","console","log","generateToken","subscribe","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Angular Project File\\loginapp\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  credentials = {\n    email: '',\n    password: '',\n  };\n\n  constructor(private loginService: LoginService) {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    console.log('form is submitted');\n\n    console.log(this.credentials);\n    \n\n    if (\n      this.credentials.email != '' &&\n      this.credentials.password != '' &&\n      this.credentials.email != null &&\n      this.credentials.password != null\n    ) {\n      console.log('We have to submit the form to server');\n\n// token generate\nthis.loginService.generateToken(this.credentials).subscribe(\n  response => {\n\n    // success\n    console.log(response);\n    \n  },\n  error => {\n    // error\n    console.log(error);\n  }\n  \n)\n\n\n\n    } else {\n      console.log('Fields are empty !!');\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQjD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAMzBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IALhC,KAAAC,WAAW,GAAG;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;EAEgD;EAEjDC,QAAQA,CAAA,GAAU;EAElBC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAEhCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,WAAW,CAAC;IAG7B,IACE,IAAI,CAACA,WAAW,CAACC,KAAK,IAAI,EAAE,IAC5B,IAAI,CAACD,WAAW,CAACE,QAAQ,IAAI,EAAE,IAC/B,IAAI,CAACF,WAAW,CAACC,KAAK,IAAI,IAAI,IAC9B,IAAI,CAACD,WAAW,CAACE,QAAQ,IAAI,IAAI,EACjC;MACAG,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MAEzD;MACA,IAAI,CAACP,YAAY,CAACQ,aAAa,CAAC,IAAI,CAACP,WAAW,CAAC,CAACQ,SAAS,CACzDC,QAAQ,IAAG;QAET;QACAJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;MAEvB,CAAC,EACDC,KAAK,IAAG;QACN;QACAL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MACpB,CAAC,CAEF;KAII,MAAM;MACLL,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;EAEtC;CACD;AA7CYT,cAAc,GAAAc,UAAA,EAL1Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWjB,cAAc,CA6C1B;SA7CYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}