{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate() {\n    console.log(this.loginService.isLoggedIn());\n    if (this.loginService.isLoggedIn()) {\n      console.log(2);\n      return true;\n    }\n    console.log(3);\n    this.router.navigate(['login']);\n    return false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","loginService","router","canActivate","console","log","isLoggedIn","navigate","i0","ɵɵinject","i1","LoginService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\Angular Project File\\loginapp\\src\\app\\auth.guard.ts"],"sourcesContent":["import { CanActivate, Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  canActivate(): boolean {  \n\n  \n\n    console.log(this.loginService.isLoggedIn());\n    \n    if (this.loginService.isLoggedIn()) {\n\n      console.log(2);\n\n      return true;\n     \n    }\n    console.log(3);\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n"],"mappings":";;;AAIA,MAGaA,SAAS;EACpBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEzEC,WAAWA,CAAA;IAITC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,YAAY,CAACK,UAAU,EAAE,CAAC;IAE3C,IAAI,IAAI,CAACL,YAAY,CAACK,UAAU,EAAE,EAAE;MAElCF,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;MAEd,OAAO,IAAI;;IAGbD,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,IAAI,CAACH,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EACd;;AApBWR,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATd,SAAS,C;SAATA,SAAS;EAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPjB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}