{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.authGuard = (route, state) => {\n      if (this.loginService.isLoggedIn()) {\n        return true;\n      }\n      this.router.navigate();\n      return false;\n    };\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","loginService","router","authGuard","route","state","isLoggedIn","navigate","i0","ɵɵinject","i1","LoginService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\Angular Project File\\loginapp\\src\\app\\auth.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\n\n\n\n@Injectable({\n  providedIn:'root',\n})\n\n export class AuthGuard  {\n\nconstructor(private loginService:LoginService, private router:Router){ }\n\n\n  authGuard: CanActivateFn = (route, state) => {\n\n  \nif(this.loginService.isLoggedIn()){\n  return true;\n}\n\nthis.router.navigate()\n\n\n  return false;\n};\n\n\n\n}\n\n"],"mappings":";;;AAMA,MAIcA,SAAS;EAEvBC,YAAoBC,YAAyB,EAAUC,MAAa;IAAhD,KAAAD,YAAY,GAAZA,YAAY;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAG3D,KAAAC,SAAS,GAAkB,CAACC,KAAK,EAAEC,KAAK,KAAI;MAG9C,IAAG,IAAI,CAACJ,YAAY,CAACK,UAAU,EAAE,EAAC;QAChC,OAAO,IAAI;;MAGb,IAAI,CAACJ,MAAM,CAACK,QAAQ,EAAE;MAGpB,OAAO,KAAK;IACd,CAAC;EAdsE;;AAFzDR,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATd,SAAS,C;SAATA,SAAS;EAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;EAAAC,UAAA,EAHV;AAAM;SAGLjB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}