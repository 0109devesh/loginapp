{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nclass AuthGuard {\n  constructor(loginService) {\n    this.loginService = loginService;\n    this.authGuard = (route, state) => {\n      if (this.loginService.isLoggedIn()) {\n        return true;\n      }\n      return false;\n    };\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","loginService","authGuard","route","state","isLoggedIn","i0","ɵɵinject","i1","LoginService","factory","ɵfac","providedIn"],"sources":["E:\\Angular Project File\\loginapp\\src\\app\\auth.guard.ts"],"sourcesContent":["import { CanActivateFn } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\n\n\n\n@Injectable({\n  providedIn:'root',\n})\n\n export class AuthGuard {\n\nconstructor(private loginService:LoginService){ }\n\n\n  authGuard: CanActivateFn = (route, state) => {\n\n  \nif(this.loginService.isLoggedIn()){\n  return true;\n}\n\n\n\n  return false;\n};\n\n\n\n}\n\n"],"mappings":";;AAMA,MAIcA,SAAS;EAEvBC,YAAoBC,YAAyB;IAAzB,KAAAA,YAAY,GAAZA,YAAY;IAG9B,KAAAC,SAAS,GAAkB,CAACC,KAAK,EAAEC,KAAK,KAAI;MAG9C,IAAG,IAAI,CAACH,YAAY,CAACI,UAAU,EAAE,EAAC;QAChC,OAAO,IAAI;;MAKX,OAAO,KAAK;IACd,CAAC;EAb+C;;AAFlCN,SAAS,C;mBAATA,SAAS,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAATV,SAAS,C;SAATA,SAAS;EAAAW,OAAA,EAATX,SAAS,CAAAY,IAAA;EAAAC,UAAA,EAHV;AAAM;SAGLb,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}