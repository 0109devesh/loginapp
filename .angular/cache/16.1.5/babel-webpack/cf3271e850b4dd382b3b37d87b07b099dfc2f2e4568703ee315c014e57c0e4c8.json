{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/material/button\";\nclass DashboardComponent {\n  constructor(userService) {\n    this.userService = userService;\n  }\n  ngOnInit() {}\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(loggInUser => {\n      console.log('from dashboard component current user', loggInUser);\n    }, error => {\n      console.log('Error' + error);\n    });\n  }\n  getUser() {\n    this.userService.getUser().subscribe(user => {\n      console.log('from dashboard component all user', user);\n    }, error => {\n      console.log('Error' + error);\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 10,\n  vars: 0,\n  consts: [[1, \"bootstrap-wrapper\"], [1, \"container\", \"text-center\", \"mt\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Welcome to Admin Panel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_4_listener() {\n        return ctx.getCurrentUser();\n      });\n      i0.ɵɵtext(5, \"Get Current User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\")(7, \"br\");\n      i0.ɵɵelementStart(8, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_8_listener() {\n        return ctx.getUser();\n      });\n      i0.ɵɵtext(9, \"Get Details\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i2.MatButton],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { DashboardComponent };","map":{"version":3,"names":["DashboardComponent","constructor","userService","ngOnInit","getCurrentUser","subscribe","loggInUser","console","log","error","getUser","user","i0","ɵɵdirectiveInject","i1","UserService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_Template_button_click_4_listener","ɵɵelement","DashboardComponent_Template_button_click_8_listener"],"sources":["E:\\Angular Project File\\loginapp\\src\\app\\dashboard\\dashboard.component.ts","E:\\Angular Project File\\loginapp\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n\n  currentUser : string;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {}\n\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(\n      (loggInUser) => {\n        console.log('from dashboard component current user', loggInUser);\n      },\n      (error) => {\n        console.log('Error' + error);\n      }\n    );\n  }\n\n\n\n  getUser() {\n    this.userService.getUser().subscribe(\n      (user) => {\n        console.log('from dashboard component all user', user);\n      },\n      (error) => {\n        console.log('Error' + error);\n      }\n    );\n  }\n}\n","\n<div class=\"bootstrap-wrapper\">\n    <div class=\"container text-center mt\">\n        <h1>Welcome to Admin Panel</h1>\n        <button (click)=\"getCurrentUser()\" mat-raised-button>Get Current User</button> <br><br>\n        <!-- <h1 *ngIf=\"user\">user is </h1> -->\n        <button (click)=\"getUser()\" mat-raised-button>Get Details</button>\n    </div>\n</div>\n"],"mappings":";;;AAGA,MAKaA,kBAAkB;EAI7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,QAAQA,CAAA,GAAU;EAElBC,cAAcA,CAAA;IACZ,IAAI,CAACF,WAAW,CAACE,cAAc,EAAE,CAACC,SAAS,CACxCC,UAAU,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,UAAU,CAAC;IAClE,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,KAAK,CAAC;IAC9B,CAAC,CACF;EACH;EAIAC,OAAOA,CAAA;IACL,IAAI,CAACR,WAAW,CAACQ,OAAO,EAAE,CAACL,SAAS,CACjCM,IAAI,IAAI;MACPJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEG,IAAI,CAAC;IACxD,CAAC,EACAF,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,KAAK,CAAC;IAC9B,CAAC,CACF;EACH;;AA9BWT,kBAAkB,C;mBAAlBA,kBAAkB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAlBf,kBAAkB,C;QAAlBA,kBAAkB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP/BV,EAAA,CAAAY,cAAA,aAA+B;MAEnBZ,EAAA,CAAAa,MAAA,6BAAsB;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAC/Bd,EAAA,CAAAY,cAAA,gBAAqD;MAA7CZ,EAAA,CAAAe,UAAA,mBAAAC,oDAAA;QAAA,OAASL,GAAA,CAAAnB,cAAA,EAAgB;MAAA,EAAC;MAAmBQ,EAAA,CAAAa,MAAA,uBAAgB;MAAAb,EAAA,CAAAc,YAAA,EAAS;MAACd,EAAA,CAAAiB,SAAA,SAAI;MAEnFjB,EAAA,CAAAY,cAAA,gBAA8C;MAAtCZ,EAAA,CAAAe,UAAA,mBAAAG,oDAAA;QAAA,OAASP,GAAA,CAAAb,OAAA,EAAS;MAAA,EAAC;MAAmBE,EAAA,CAAAa,MAAA,kBAAW;MAAAb,EAAA,CAAAc,YAAA,EAAS;;;;;;SDE7D1B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}